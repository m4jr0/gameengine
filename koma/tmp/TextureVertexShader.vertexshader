# version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertex_position_modelspace;
layout(location = 1) in vec2 vertex_uv;

// Output data, which will be interpolated for each fragment.
out vec2 uv;

// Values that stay constant for the whole mesh.
uniform mat4 mvp;

void main() {
  // Output position of the vertex, in clip space: mvp * position.
  gl_Position = mvp * vec4(vertex_position_modelspace, 1);

  // uv of the vertex. No special space for this one.
  uv = vertex_uv;
}
